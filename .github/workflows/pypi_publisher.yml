name: Publish Python Package to PyPI

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  check-version:
    name: Check Version
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
      new_version: ${{ steps.check.outputs.new_version }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Get current version
        id: check
        run: |
          # Extract the current version from setup.py (assuming it's defined there)
          current_version=$(python setup.py --version)
          echo "Current version: $current_version"

          # Get the last version from the previous commit (if exists)
          git fetch --tags
          last_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -n "$last_tag" ]; then
            git checkout "$last_tag"
            previous_version=$(python setup.py --version)
            git checkout -
          else
            previous_version=""
          fi
          echo "Previous version: $previous_version"

          # Compare versions
          if [ "$current_version" != "$previous_version" ]; then
            echo "Version has changed."
            echo "::set-output name=version_changed::true"
            echo "::set-output name=new_version::$current_version"
          else
            echo "Version has not changed."
            echo "::set-output name=version_changed::false"
          fi

  build-and-publish:
    name: Build and Publish
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools twine

      - name: Build distribution
        run: |
          python setup.py sdist bdist_wheel
          ls -l dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/*

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          print-hash: true  # Optional: Shows hash values of files to be uploaded
